Syntax Specification
=====================

Basic Types
------------

* Integers: int<size> (e.g., int<8>, int<16>, int<32>, int<64>)
* Floating-point numbers: float<size> (e.g., float<16>, float<32>, float<64>)
* Booleans: bool
* Strings: string
* Arrays: type[size] (e.g., int<8>[10])
* Tuples: (type1, type2, ..., typen)

Variables
---------

* Variables: let variable\_name: type = value;
* Constants: const constant\_name: type = value;

Control Structures
===================

Conditionals
-------------

if (condition) { // code block } else if (condition) { // code block } else { // code block }

Loops
------

* For loops: for (initialization; condition; increment) { // code block }
* Foreach loops: foreach (variable\_name : array\_variable) { // code block }
* While loops: while (condition) { // code block }
* Do-while loops: do { // code block } while (condition);

Functions
----------

* Function declaration: func function\_name(parameter1: type, parameter2: type, ...): return\_type { // code block }
* Function parameters: pass by value (default), pass by reference (ref)

Classes
--------

* Class declaration: class ClassName { // code block }
* Members declared within the class block
* Inheritance: class DerivedClass: access\_modifier BaseClass { ... }
	+ Access modifiers: public, protected, private

User-defined Data Types
------------------------

* User-defined data types using the type keyword

Example:
type Point = (x: int, y: int);

The using Keyword
------------------

* Type aliasing

Example:
using short_name = long_type_name;

* Namespace aliasing

Example:
using namespace std;

Preprocessor Directives
------------------------

Here's an example of how these preprocessor directives could be used in YAPL:

#include <std::io>

#define MAX_SIZE 100

#ifdef DEBUG
#define LOG(message) std::out.write("${message}\n")
#else
#define LOG(message)
#endif

main() { let array = new int[MAX\_SIZE]; let i;
    for (i = 0; i < MAX_SIZE; i++) { array[i] = i; }
    LOG("Array initialized.");
    return 0;
}

In this example, the #include directive is used to include the stdio.h standard library. 
The #define directive is used to define a constant value MAX\_SIZE and a macro LOG. 
The #ifdef and #ifndef directives are used to conditionally define the LOG macro based on the DEBUG preprocessor symbol. 
The #else and #elif directives can be used for more complex conditional compilation.
